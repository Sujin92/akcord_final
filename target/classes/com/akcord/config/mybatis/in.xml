<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.akcord.in.dao.InDao">
    
    <!-- 질문등록 -->
    <insert id="answerroom" parameterType="java.util.Map">
        insert all
        into qna (qna_id,user_id,major_id,subject,content,reg_date,hit, category)
        values (seq_qna_id.nextval, #{user_id}, #{major_id}, #{subject}, #{content}, sysdate, 1, 3)
        into qna_choose
        values (seq_qna_id.currval, '0', '0')
        select * from dual
    </insert>
    
    <!-- 지식인 리스트목록 -->
    <select id="answerlist" parameterType="java.util.Map" resultType="inDto" >
        select c.*
        from(select rownum rn, b.*
        from(select a.*, (select count(qna_comment_id) from qna_comment where qna_id=a.qna_id) commentcnt
        from (select q.qna_id, u.user_id, u.id, u.name, u.major_id, q.subject, q.content, q.reg_date, q.hit
        from qna q, users u
        where q.user_id = u.user_id and q.major_id = #{major_id}
        order by reg_date desc
        ) a
        ) b
        where rownum &lt;= #{end}
        ) c
        where c.rn &gt; #{start}
    </select>
    
    <!-- 답변순 리스트목록 -->
    <select id="replyCountList" parameterType="java.util.Map" resultType="inDto" >
        select c.*
        from(select rownum rn, b.*
        from(select a.*, (select count(qna_comment_id) from qna_comment where qna_id=a.qna_id) commentcnt
        from (select q.qna_id, u.user_id, u.id, u.name, u.major_id, q.subject, q.content, q.reg_date, q.hit
        from qna q, users u
        where q.user_id = u.user_id
        ) a
        <if test="ch == 1">            
            order by commentcnt desc
        </if>
        <if test="ch == 2">
            order by a.hit desc
        </if>
        ) b
        where rownum &lt;= #{end}
        ) c
        where c.rn &gt; #{start}
    </select>
    
    <!-- 카테고리 클릭시 리스트출력
    <select id="category" parameterType="java.util.Map" resultType="inDto">
        select a.*, (select count(qna_comment_id) from qna_comment where qna_id=a.qna_id) commentcnt
        from (select q.qna_id, u.user_id, u.id, u.name, q.major_id majorId, q.subject, q.content, q.reg_date, q.hit
        from qna q, users u
        where q.user_id = u.user_id and q.major_id = #{major_id}
        order by reg_date desc) a
    </select> -->
    
    <!-- 지식인 리스트 클릭시 질문내용보기 -->
    <select id="getAnswer" parameterType="int" resultType="inDto">
        select a.*, (select count(qna_comment_id) from qna_comment where qna_id=a.qna_id) commentcnt
        from (select q.qna_id, u.user_id, u.id, u.name, q.major_id majorId, m.major_name majorName, q.subject, q.content, q.reg_date, q.hit
        from qna q, users u, major m
        where q.user_id = u.user_id
        and q.major_id = m.major_id
        and q.qna_id = #{qna_id}) a
    </select>
    
    <!-- 전공 리스트 출력 -->
    <select id="majorlist" resultType="com.akcord.group.model.MajorDto">
        select major_id majorId, major_name majorName
        from major
    </select>
    
    <update id="updateAnswerroom" parameterType="java.util.Map">
        update qna set subject=#{subject}, content=#{content}, major_id = #{major_id}
        where qna_id=#{qna_id}
    </update>
    
    <delete id="deleteAnswerroom" parameterType="String">
        delete qna where qna_id=#{qna_id}
    </delete>
    
    <update id="good_or_badUpdate" parameterType="java.util.Map">
        <if test="gob == 1">
            update qna_choose set goodcount = goodcount + 1
        </if>
        <if test="gob == 2">
            update qna_choose set badcount = badcount + 1
        </if>
        where qna_comment_id=#{qna_comment_id}
    </update>
    
    <select id="good_or_badAllSelect" parameterType="String" resultType="chooseDto">
        select qna_comment.qna_comment_id, goodcount goodCount, badcount badCount from qna_choose, qna_comment
        where qna_choose.qna_comment_id=qna_comment.qna_comment_id and qna_id=#{qna_id}
    </select>
    
    <select id="good_or_badSelect" parameterType="String" resultType="chooseDto">
        select qna_comment_id, goodcount goodCount, badcount badCount from qna_choose
        where qna_comment_id=#{qna_comment_id}
    </select>
    
    <select id="replyList" parameterType="int" resultType="replyDto">
        select c.*, id
        from (select b.user_id user_id, b.qna_comment_id qna_comment_id, qna_re_id, re_comment, b.reg_date
        from (select qna_comment_id
        from qna_comment
        where qna_id=#{qna_id}) a, qna_comment_re b
        where a.qna_comment_id=b.qna_comment_id
        order by b.reg_date) c, users u
        where c.user_id=u.user_id
    </select>
    
    <insert id="replyWrite" parameterType="replyDto">
        insert into QNA_COMMENT_RE
        values(SEQ_QNA_RE_ID.nextval, #{qna_comment_id}, #{user_id}, #{re_comment}, sysdate)
    </insert>
</mapper>