<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.akcord.group.dao.GroupMainDao">

    <select id="gMainInfo" parameterType="int" resultType="groupRoomDto">
        select 
                (select count(group_id) 
                from grouproom_list gl where gl.group_id = g.group_id and gl.is_accept = 1) nowCount, 
                g.group_id groupId, decode(to_char(g.reg_date, 'yymmdd'), to_char(sysdate, 'yymmdd'), to_char(g.reg_date, 'hh24:mi:ss'),to_char(g.reg_date, 'yy.mm.dd')) as regDate, m.major_name majorName, g.group_name groupName,
                g.content content, g.g_count gCount, u.name name, g.leader_id leaderId
                        from users u, grouproom g, major m
                            where u.user_id = g.leader_id and
                            g.major_id = m.major_id
                            and group_id = #{groupId}
        
    </select>
    <select id="gMemberlist" parameterType="java.util.Map" resultType="groupListDto">
        select b.*
        from(select rownum rn, a.*
        from(        
        select g.group_id groupId, u.name name, u.id userId, m.major_name majorName, decode(to_char(gl.reg_date, 'yymmdd'), to_char(sysdate, 'yymmdd'), to_char(gl.reg_date, 'hh24:mi:ss'),to_char(gl.reg_date, 'yy.mm.dd')) as regDate, u.user_id seq
                        from grouproom_list gl, grouproom g, users u, major m
                        where gl.group_id = g.group_id
                        and u.user_id = gl.user_id
                        and m.major_id = u.major_id
                        and g.group_id = #{groupId}
                        and gl.user_id != #{user_id}
                        and gl.is_accept = 0
                        <if test="key != '' and word != ''">
                            <if test="key == 'id'">
                                and u.id like '%' || #{word} ||'%'
                            </if>
                            <if test="key != 'id'">
                                and m.major_name  like '%' || #{word} ||'%'
                            </if>
                        </if>
                        <if test="order == ''">
                            order by gl.reg_date desc
                        </if>
                        <if test="order != ''">
                            <if test="order == 'major'">
                                order by m.major_name desc
                            </if>
                            <if test="order == 'regdate'">
                                order by gl.reg_date desc
                            </if>
                        </if>
                ) a
                where rownum &lt;= #{end}
            ) b
            where b.rn &gt; #{start}                 
                     
    </select>
    
    <delete id="rejectMember" parameterType="java.util.Map">
        delete grouproom_list where user_id = #{seq} and group_id = #{groupId}
    </delete>
    
    <update id="acceptMember" parameterType="java.util.Map">
        update grouproom_list set is_accept = 1
               where user_id = #{seq} and group_id = #{groupId}
    </update>
    
    <select id="searchlist" parameterType="String" resultType="groupListDto">
        select u.id userId, m.major_name majorName, u.name name, u.user_id seq
            from users u, major m
            where u.major_id = m.major_id
            and u.user_id not in (
            select user_id from grouproom_list where group_id = #{groupId})
            and u.id like '%' || #{sid} || '%'
    </select>
    
    <insert id="invite" parameterType="java.util.Map">
        insert into grouproom_list (group_id, user_id, is_accept, reg_date)
        values (#{groupId}, #{seq}, 0, sysdate)
    </insert>
    
    <select id="originlist" parameterType="java.util.Map" resultType="groupListDto">
        select b.*
        from(select rownum rn, a.*
        from(        
        select g.group_id groupId, u.name name, u.id userId, m.major_name majorName,  decode(to_char(gl.reg_date, 'yymmdd'), to_char(sysdate, 'yymmdd'), to_char(gl.reg_date, 'hh24:mi:ss'),to_char(gl.reg_date, 'yy.mm.dd')) as regDate, u.user_id seq
                from grouproom_list gl, grouproom g, users u, major m
                where gl.group_id = g.group_id
                and u.user_id = gl.user_id
                and m.major_id = u.major_id
                and g.group_id = #{groupId}
                and gl.user_id != #{seq}
                and gl.is_accept = 1
                
                ) a
                where rownum &lt;= #{end}
                ) b
                where b.rn &gt; #{start}                 
                
    </select>
    
    <select id="schedulelist" parameterType="int" resultType="scheduleDto">
        select schedule_id scheduleId, group_id groupId, schedule_name scheduleName, detail, start_date startDate, start_time startTime,
        end_date endDate, end_time endTime, 
       (to_date(end_date) - to_date(sysdate)) deadline
        from schedule
        where group_id = #{groupId}
    </select>
    
    <insert id="scheduleInsert" parameterType="scheduleDto">
        insert into schedule values
        (seq_schedule_id.nextval, #{groupId}, #{scheduleName}, #{detail}, #{startDate}, #{startTime}, #{endDate}, #{endTime})
    </insert>
    
    <update id="scheduleModify" parameterType="scheduleDto">
        update schedule
        set schedule_name = #{scheduleName}, detail = #{detail}, start_date = #{startDate}, start_time = #{startTime},
        end_date = #{endDate}, end_time = #{endTime}
        where schedule_id = #{scheduleId}
    </update>
    
    <delete id="scheduleDelete" parameterType="int">
        delete schedule
        where schedule_id = #{scheduleId}
    </delete>
    
    <select id="groupArticleList" parameterType="java.util.Map" resultType="groupHwDto">
        select mnext.myroom_next_id myroomNextId, ghw.group_id groupId, 
                  u.id id , u.user_id userid,  u.name name, mnext.subject mysubject, mnext.content mycontent, mnext.reg_date regDate, m.major_name majorName
                    from users u, myroom_next mnext, grouproom_hw ghw, major m
                    where u.user_id = mnext.user_id
                    and ghw.myroom_next_id = mnext.myroom_next_id
                    and u.major_id = m.major_id
                    and ghw.group_id = #{groupId}
                    <if test="scheduleId != ''">
                            and schedule_id = #{scheduleId}
                    </if>
    </select>
    
    <select id="articleView" parameterType="java.util.Map" resultType="groupHwDto">
        select mnext.myroom_next_id myroomNextId, ghw.group_id groupId, 
        u.id id , u.user_id userid, u.name name, mnext.subject mysubject, mnext.content mycontent, mnext.reg_date regDate, m.major_name majorName
                    from users u, myroom_next mnext, grouproom_hw ghw, major m
                    where u.user_id = mnext.user_id
                    and ghw.myroom_next_id = mnext.myroom_next_id
                    and u.major_id = m.major_id
                    and ghw.group_id = #{groupId}
                    and mnext.myroom_next_id = #{articleseq}
    </select>
    
    <delete id="deletegroup" parameterType="int">
        delete grouproom where group_id =#{groupId}
    </delete>
    
    <delete id="outgroup" parameterType="java.util.Map">
        delete grouproom_list where group_id =#{groupId} and user_id = #{userId}
        
    </delete> 
    
    <select id="countperson" parameterType="int" resultType="int">
        select count(*) 
                    from (
                            select count(u.user_id) from grouproom_hw ghw, users u, myroom_next mnext
                            where u.user_id = mnext.user_id
                            and ghw.myroom_next_id = mnext.myroom_next_id
                            and schedule_id = #{scheduleId}
                            group by u.user_id
                    )
    </select>
    
    <select id="totalperson" parameterType="int" resultType="int">
        select count(user_id), group_id from grouproom_list where group_id = #{groupId} group by group_id
    </select>
</mapper>